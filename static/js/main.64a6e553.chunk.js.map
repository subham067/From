{"version":3,"sources":["Compnonts/From.js","App.js","reportWebVitals.js","index.js"],"names":["From","useState","FristName","setFristName","LastName","setLastName","UserName","setUserName","City","setCity","ZipC","setZipC","FForm","setFForm","JsonFrom","FetchFrom","myHeaders","Headers","append","fetch","method","headers","redirect","then","res","json","result","data","catch","error","console","log","useEffect","className","noValidate","htmlFor","type","value","onChange","e","target","id","defaultValue","required","onClick","preventDefault","requestOptions","body","JSON","stringify","response","text","scope","map","table","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64a6e553.chunk.js","sourcesContent":["// eslint-disable-next-line \r\nimport React, { useState, useEffect } from 'react'\r\n\r\nfunction From() {\r\n\r\n    const [FristName, setFristName] = useState(\"\")\r\n    const [LastName, setLastName] = useState(\"\")\r\n    const [UserName, setUserName] = useState(\"\")\r\n    const [City, setCity] = useState(\"\")\r\n    const [ZipC, setZipC] = useState(\"\")\r\n    const [FForm, setFForm] = useState([])\r\n\r\n    let JsonFrom = [\r\n        {\r\n            FristName: FristName,\r\n            LastName: LastName,\r\n            UserName: UserName,\r\n            City: City,\r\n            ZipC: ZipC,\r\n\r\n        }\r\n    ]\r\n\r\n\r\n    const Submit = (e) => {\r\n        e.preventDefault();\r\n        console.log(JsonFrom);\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptions = {\r\n            method: \"post\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\",\r\n            body: JSON.stringify(JsonFrom)\r\n        };\r\n\r\n        fetch(\"https://v1.nocodeapi.com/subham067/google_sheets/OldWtGCwrgnJdVNN/addRows?tabId=Sheet1\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => console.log(result))\r\n            .then(FetchFrom())\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n    const FetchFrom = () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptions = {\r\n            method: \"get\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\",\r\n\r\n        };\r\n\r\n        fetch(\"https://v1.nocodeapi.com/subham067/google_sheets/OldWtGCwrgnJdVNN?tabId=Sheet1\", requestOptions)\r\n        .then(res => res.json())\r\n        .then(result => setFForm(result.data))\r\n        .catch(error => console.log('error', error));\r\n       \r\n    }\r\n    useEffect(() => {\r\n        FetchFrom();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <h1 className=\"text-center\">Submit From</h1>\r\n            <div className=\"row g-3 needs-validation\" noValidate>\r\n                <div className=\"col-md-4\">\r\n                    <label htmlFor=\"validationCustom01\" className=\"form-label\">\r\n                        First name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={FristName}\r\n                        onChange={(e) => setFristName(e.target.value)}\r\n                        id=\"validationCustom01\"\r\n                        defaultValue=\"Mark\"\r\n                        required\r\n                    />\r\n                    <div className=\"valid-feedback\">Looks good!</div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <label htmlFor=\"validationCustom02\" className=\"form-label\">\r\n                        Last name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        id=\"validationCustom02\"\r\n                        defaultValue=\"Otto\"\r\n                        required\r\n                    />\r\n                    <div className=\"valid-feedback\">Looks good!</div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <label htmlFor=\"validationCustomUsername\" className=\"form-label\">\r\n                        Username\r\n                    </label>\r\n                    <div className=\"input-group has-validation\">\r\n                        <span className=\"input-group-text\" id=\"inputGroupPrepend\">\r\n                            @\r\n                        </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={UserName}\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                            id=\"validationCustomUsername\"\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            required\r\n                        />\r\n                        <div className=\"invalid-feedback\">Please choose a username.</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label htmlFor=\"validationCustom03\" className=\"form-label\">\r\n                        City\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={City}\r\n                        onChange={e => setCity(e.target.value)}\r\n                        id=\"validationCustom03\"\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-feedback\">Please provide a valid city.</div>\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                    <label htmlFor=\"validationCustom05\" className=\"form-label\">\r\n                        Zip\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={ZipC}\r\n                        onChange={e => setZipC(e.target.value)}\r\n                        className=\"form-control\"\r\n                        id=\"validationCustom05\"\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-feedback\">Please provide a valid zip.</div>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 d-grid d-flex align-items-end flex-row-reverse\">\r\n               \r\n                    <button className=\"btn btn-primary \" onClick={Submit}>\r\n                        Submit form\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <h1 className=\"text-center\">Show all Data</h1>\r\n            <table className=\"table    mt-3\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Handle</th>\r\n                        <th scope=\"col\">City</th>\r\n                        <th scope=\"col\">Zip</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        FForm.map((table) => {\r\n                            return (\r\n                                <tr>\r\n                                    <th scope=\"row\">1</th>\r\n                                    <td>{table.FristName}</td>\r\n                                    <td>{table.LastName}</td>\r\n                                    <td>@{table.UserName}</td>\r\n                                    <td>{table.City}</td>\r\n                                    <td>{table.ZipC}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default From\r\n","\nimport './App.css';\nimport From from './Compnonts/From'\n\nfunction App() {\n \n  return (\n    <div >\n    <From/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}